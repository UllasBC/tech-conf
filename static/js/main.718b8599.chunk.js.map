{"version":3,"sources":["components/SearchBar/SearchBar.jsx","components/Header/Header.jsx","components/ConferenceItems/ConferenceItems.jsx","components/Conferences/Conferences.jsx","container/HomePage/HomePage.jsx","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","props","className","type","placeholder","onChange","evt","searchInput","target","value","class","Header","aria-hidden","ConferenceItems","style","backgroundImage","conference","imageURL","replace","onClick","window","open","confRegUrl","confName","entryType","venue","confStartDate","confEndDate","Conferences","conferenceData","length","setFilterCity","cities","map","city","index","setConfType","setFilterMonth","setFilterCountry","countries","country","item","HomePage","useState","data","setData","loading","setLoading","search","setSearch","filterCity","confType","filterMonth","filterCountry","useEffect","a","fetch","res","json","console","log","paid","free","fetchData","filterData","filter","toLowerCase","includes","trim","Set","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.718b8599.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./SearchBar.css\";\n\nexport const SearchBar = (props) => {\n  return (\n    <form className=\"search-bar\">\n      <input\n        type=\"search\"\n        placeholder=\"Search conference by the name or city...\"\n        onChange={(evt) => props.searchInput(evt.target.value)}\n      />\n      <i class=\"fa fa-search\"></i>\n    </form>\n  );\n};\n","import React from \"react\";\nimport { SearchBar } from \"../SearchBar/SearchBar\";\nimport \"./Header.css\";\n\nexport const Header = (props) => {\n  return (\n    <div className=\"header\">\n      <div className=\"header-container\">\n        <div className=\"header-container__logo\">Tech-Conf <i class=\"fa fa-users\" aria-hidden=\"true\"></i> </div>\n        <div className=\"header-container__search-bar\">\n          <SearchBar searchInput={props.searchInput} />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./ConferenceItems.css\";\n\nexport const ConferenceItems = (props) => {\n  return (\n    <ul>\n      <li\n        className=\"booking-card\"\n        style={{\n          backgroundImage: `url(${props.conference.imageURL.replace(\n            /(\")/g,\n            \"\"\n          )})`,\n        }}\n      >\n        <div className=\"book-container\">\n          <div className=\"content\">\n            <button className=\"btn\" onClick={()=>{window.open(`${props.conference.confRegUrl}`)}}>Register</button>\n          </div>\n        </div>\n        <div className=\"informations-container\">\n          <h2 className=\"title\">{props.conference.confName}</h2>\n          <i class=\"fa fa-credit-card\" aria-hidden=\"true\"></i>\n          <h2>{props.conference.entryType}</h2>\n\n          <div className=\"more-information\">\n            <div className=\"info-and-date-container\">\n              <div className=\"box info\">\n                <i class=\"fa fa-map-marker\" aria-hidden=\"true\"></i>\n                <p>{props.conference.venue}</p>\n              </div>\n              <div className=\"box date\">\n                <i class=\"fa fa-calendar\" aria-hidden=\"true\"></i>\n                <p>\n                  {props.conference.confStartDate} --{\" \"}\n                  {props.conference.confEndDate}\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </li>\n    </ul>\n  );\n};\n","import React from \"react\";\nimport { ConferenceItems } from \"../ConferenceItems/ConferenceItems\";\nimport \"./Conferences.css\";\n\nexport const Conferences = (props) => {\n  return (\n    <>\n      <main className=\"conferences\">\n        <div className=\"conference__header\">\n          <h1>\n            Conferences({props.conferenceData && props.conferenceData.length})\n          </h1>\n          <i class=\"fa fa-filter fa-2x\" aria-hidden=\"true\">\n            {\" \"}\n            Filter\n          </i>\n          <select\n            onChange={(evt) => {\n              props.setFilterCity(evt.target.value);\n            }}\n          >\n            <option>City</option>\n            {props.cities &&\n              [...props.cities].map((city, index) => {\n                return <option key={index}>{city}</option>;\n              })}\n          </select>\n          <select\n            onChange={(evt) => {\n              props.setConfType(evt.target.value);\n            }}\n          >\n            <option>Type</option>\n            <option>Free</option>\n            <option>Paid</option>\n          </select>\n\n          <select\n            onChange={(evt) => {\n              props.setFilterMonth(evt.target.value);\n            }}\n          >\n            <option>Month</option>\n            <option>Jan</option>\n            <option>Feb</option>\n            <option>Mar</option>\n            <option>April</option>\n            <option>May</option>\n            <option>June</option>\n            <option>July</option>\n            <option>Aug</option>\n            <option>Sept</option>\n            <option>Oct</option>\n            <option>Nov</option>\n            <option>Dec</option>\n          </select>\n\n          <select\n            onChange={(evt) => {\n              props.setFilterCountry(evt.target.value);\n            }}\n          >\n            <option>Country</option>\n            {props.countries &&\n              [...props.countries].map((country, index) => {\n                return <option key={index}>{country}</option>;\n              })}\n          </select>\n        </div>\n\n        <div className=\"conference-block\">\n          <div className=\"conference__container\">\n            {props.conferenceData.map((item, index) => (\n              <ConferenceItems conference={item} key={index} />\n            ))}\n          </div>\n        </div>\n      </main>\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Header } from \"../../components/Header/Header\";\nimport { Conferences } from \"../../components/Conferences/Conferences\";\nimport \"./HomePage.css\";\nexport const HomePage = () => {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [search, setSearch] = useState(\"\");\n  const [filterCity, setFilterCity] = useState(\"City\");\n  const [confType, setConfType] = useState(\"Type\");\n  const [filterMonth, setFilterMonth] = useState(\"Month\");\n  const [filterCountry, setFilterCountry] = useState(\"Country\");\n  // console.log(filterCity);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const apiUrl =\n        \"https://o136z8hk40.execute-api.us-east-1.amazonaws.com/dev/get-list-of-conferences\";\n      const res = await fetch(apiUrl);\n      const conferenceData = await res.json();\n      console.log(conferenceData);\n      if (conferenceData && conferenceData.paid) {\n        setData([...conferenceData.paid, ...conferenceData.free]);\n      }\n\n      setLoading(false);\n    };\n    fetchData();\n  }, []);\n\n  let filterData = data.filter((data) => {\n    return (\n      data.confName.toLowerCase().includes(search.toLowerCase()) ||\n      data.city.toLowerCase().includes(search.toLowerCase())\n    );\n  });\n\n  if (filterCity !== \"City\") {\n    filterData = filterData.filter((data) => {\n      return data.city === filterCity;\n    });\n  }\n\n  if (filterCountry !== \"Country\") {\n    filterData = filterData.filter((data) => {\n      return data.country === filterCountry;\n    });\n  }\n  if (confType !== \"Type\") {\n    filterData = filterData.filter((data) => {\n      return data.entryType === confType;\n    });\n  }\n\n  if (filterMonth !== \"Month\") {\n    filterData = filterData.filter((data) => {\n      return data.confStartDate.includes(filterMonth);\n    });\n  }\n\n  let cities = data\n    .map((data) => {\n      return data.city;\n    })\n    .filter((data) => {\n      return data.trim().length > 0;\n    });\n\n  cities = new Set(cities); //Duplicate values\n  // console.log(cities);\n\n  let countries = data\n    .map((data) => {\n      return data.country;\n    })\n    .filter((data) => {\n      return data.trim().length > 0;\n    });\n\n  countries = new Set(countries);\n\n  const searchInput = (value) => {\n    setSearch(value);\n  };\n\n  return (\n    <>\n      <Header searchInput={searchInput} />\n      {loading ? (\n        <div className=\"spinner\">\n         \n        </div>\n      ) : (\n        <Conferences\n          conferenceData={filterData}\n          cities={cities}\n          countries={countries}\n          setConfType={setConfType}\n          setFilterCity={setFilterCity}\n          setFilterMonth={setFilterMonth}\n          setFilterCountry={setFilterCountry}\n        />\n      )}\n    </>\n  );\n};\n","import \"./App.css\";\nimport { HomePage } from \"./container/HomePage/HomePage\";\n\nfunction App() {\n  return <HomePage />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}